{"version":3,"file":"static/js/257.4dfa0427.chunk.js","mappings":"kSAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wRAgBVE,EAAUF,EAAAA,GAAAA,IAAH,iIAUPG,EAAoBH,EAAAA,GAAAA,IAAH,yLAcjBI,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kK,kBC2D1B,EA1FqB,WAAO,IAAD,MACzB,GAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAqBjB,IAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAeL,GAF3C,OAEUM,EAFV,OAGIT,EAAaS,GAHjB,gDAKIP,EAAS,EAAD,IALZ,0DADc,sBAYd,OAZe,WAAD,wBAUdQ,GAEO,WACLR,EAAS,KACV,CACF,GAAE,CAACC,IAECJ,EAAL,CAEA,IAAQY,EACNZ,EADMY,YAAaC,EACnBb,EADmBa,MAAOC,EAC1Bd,EAD0Bc,aAAcC,EACxCf,EADwCe,aAAcC,EACtDhB,EADsDgB,SAAUC,EAChEjB,EADgEiB,OAGlE,OACE,iCACE,SAAC,IAAD,WACE,UAACzB,EAAD,CAAY0B,IAAI,UAAAZ,EAASa,aAAT,eAAgBC,OAAQ,IAAxC,WACE,SAAC,MAAD,IADF,gBAMF,UAAC,IAAD,WACGlB,IAAS,oCACV,UAACP,EAAD,YACE,gBACE0B,IAAG,6CAAwCT,GAC3CU,IAAKT,EACLU,MAAM,SAER,4BACE,0BACGV,EADH,KACYW,OAAOC,SAASX,GAD5B,QAGA,wCAAgBY,KAAKC,MAAqB,GAAfZ,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOW,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,kBAK/C,SAACnC,EAAD,WACE,UAAC,IAAD,YACE,mDACA,2BACE,yBACE,SAACC,EAAD,CAAeqB,GAAG,YAAOC,MAAO,CAAEC,KAAI,UAAEd,EAASa,aAAX,aAAE,EAAgBC,MAAxD,qBAIF,yBACE,SAACvB,EAAD,CACEqB,GAAG,UACHC,MAAO,CAAEC,KAAI,UAAEd,EAASa,aAAX,aAAE,EAAgBC,MAFjC,gCAWR,SAAC,IAAD,WACE,SAAC,EAAAY,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,UA1Dc,CA+DvB,C","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const GoBackLink = styled(Link)`\n  margin-top: 14px;\n  display: inline-flex;\n  gap: 4px;\n  align-items: center;\n  padding: 4px;\n  border: 1px solid darkgray;\n  border-radius: 5px;\n  background-color: #e6e8eb;\n  transition: color 250ms linear;\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const MainBox = styled.div`\n  margin-top: 10px;\n  display: flex;\n  padding-bottom: 10px;\n\n  img {\n    margin-right: 14px;\n  }\n`;\n\nexport const AdditionalInfoBox = styled.div`\n  border-top: 2px solid darkgray;\n  border-bottom: 2px solid darkgray;\n\n  p {\n    font-weight: 600;\n  }\n\n  ul {\n    display: flex;\n    gap: 10px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  line-height: 1.5;\n  padding-bottom: 4px;\n  border-bottom: 1px solid;\n  border-color: inherit;\n\n  &.active {\n    color: red;\n  }\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../../api';\nimport { Container } from '../../components/Container/Container.styled';\nimport {\n  GoBackLink,\n  MainBox,\n  AdditionalInfoBox,\n  StyledNavLink,\n} from './MovieDetails.styled';\nimport { BsArrowLeft } from 'react-icons/bs';\n\nconst MovieDetails = () => {\n  const [movieDtls, setMovieDtls] = useState('');\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  // console.log(location);\n\n  useEffect(() => {\n    async function getMovieDtls() {\n      try {\n        const movieInfo = await fetchMovieById(movieId);\n        setMovieDtls(movieInfo);\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    getMovieDtls();\n\n    return () => {\n      setError(null);\n    };\n  }, [movieId]);\n\n  if (!movieDtls) return;\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDtls;\n\n  return (\n    <>\n      <Container>\n        <GoBackLink to={location.state?.from || '/'}>\n          <BsArrowLeft />\n          Go back\n        </GoBackLink>\n      </Container>\n\n      <Container>\n        {error && <div>error</div>}\n        <MainBox>\n          <img\n            src={`https://image.tmdb.org/t/p/original${poster_path}`}\n            alt={title}\n            width=\"220\"\n          />\n          <div>\n            <h2>\n              {title} ({Number.parseInt(release_date)})\n            </h2>\n            <p>User Score: {Math.round(vote_average * 10)}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>{genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </MainBox>\n      </Container>\n\n      <AdditionalInfoBox>\n        <Container>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <StyledNavLink to=\"сast\" state={{ from: location.state?.from }}>\n                Cast\n              </StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink\n                to=\"reviews\"\n                state={{ from: location.state?.from }}\n              >\n                Reviews\n              </StyledNavLink>\n            </li>\n          </ul>\n        </Container>\n      </AdditionalInfoBox>\n\n      <Container>\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["GoBackLink","styled","Link","MainBox","AdditionalInfoBox","StyledNavLink","NavLink","useState","movieDtls","setMovieDtls","error","setError","movieId","useParams","location","useLocation","useEffect","fetchMovieById","movieInfo","getMovieDtls","poster_path","title","release_date","vote_average","overview","genres","to","state","from","src","alt","width","Number","parseInt","Math","round","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}