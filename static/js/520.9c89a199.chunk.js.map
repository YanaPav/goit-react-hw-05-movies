{"version":3,"file":"static/js/520.9c89a199.chunk.js","mappings":"0QAEaA,E,OAAOC,GAAAA,KAAH,sF,SCEJC,EAAa,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACrC,GAA0BC,EAAAA,EAAAA,UAASD,GAAS,IAA5C,eAAOE,EAAP,KAAcC,EAAd,KAYA,OACE,UAACP,EAAD,CAAMQ,SAXR,SAAkBC,GAChBA,EAAEC,iBACF,IAAMN,EAAQK,EAAEE,cAAcC,SAASN,MAAMF,MACxB,KAAjBA,EAAMS,OAIVV,EAASC,EAAMS,QAHbC,MAAM,kBAIT,EAGC,WACE,kBACEC,KAAK,OACLC,KAAK,QACLZ,MAAOE,EACPW,SAAU,SAAAR,GAAC,OAAIF,EAASE,EAAES,OAAOd,MAAtB,KAEb,mBAAQW,KAAK,SAAb,sBAGL,E,kBCgCD,EArDe,WAAO,IAAD,EACnB,GAAwCV,EAAAA,EAAAA,UAAS,IAAjD,eAAOc,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMjB,EAAK,UAAGgB,EAAaE,IAAI,gBAApB,QAAgC,GAC3C,GAA0BnB,EAAAA,EAAAA,UAAS,MAAnC,eAAOoB,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEyBC,EAAAA,EAAAA,IAAmBxB,GAF5C,WAEUyB,EAFV,QAGeC,OAAS,GAClBZ,EAAgBW,GAEI,IAAlBA,EAAOC,OANf,sBAOY,IAAIC,MAAJ,wCAA2C3B,IAPvD,uDAUIoB,EAAS,EAAD,IAVZ,0DAHc,sBACTpB,GADS,mCAiBd4B,EACD,GAAE,CAAC5B,KASF,UAAC,IAAD,YACE,SAACJ,EAAD,CAAYC,SARhB,SAA2BG,GACzBoB,EAAS,MACT,IAAMS,EAAM,gBAAY7B,GACxBiB,EAAgBY,EACjB,EAI4C/B,MAAOE,IAC/CmB,IAAS,uBAAIA,EAAMW,UAEnBjB,IACC,wBACGA,EAAakB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMf,GAA1C,SACGY,KAFUD,EADC,QAW3B,C","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-top: 20px;\n\n  input {\n    min-width: 250px;\n  }\n`;\n","import { useState } from 'react';\nimport { Form } from './SearchForm.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchForm = ({ getQuery, value }) => {\n  const [query, setQuery] = useState(value || '');\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const value = e.currentTarget.elements.query.value;\n    if (value.trim() === '') {\n      alert('Type something!');\n      return;\n    }\n    getQuery(value.trim());\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"query\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  getQuery: PropTypes.func,\n  value: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchMoviesByQuery } from '../../api';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchForm } from '../../components/SearchForm/SearchForm';\nimport { Container } from '../../components/Container/Container.styled';\nimport { ListItem } from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function getMoviesByQuery() {\n      try {\n        const movies = await fetchMoviesByQuery(query);\n        if (movies.length > 0) {\n          setSearchMovies(movies);\n        }\n        if (movies.length === 0) {\n          throw new Error(`No movies on the search query ${query}`);\n        }\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    getMoviesByQuery();\n  }, [query]);\n\n  function getQueryFromInput(query) {\n    setError(null);\n    const params = `query=${query}`;\n    setSearchParams(params);\n  }\n\n  return (\n    <Container>\n      <SearchForm getQuery={getQueryFromInput} value={query} />\n      {error && <p>{error.message}</p>}\n\n      {searchMovies && (\n        <ul>\n          {searchMovies.map(({ id, title }) => (\n            <ListItem key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </ListItem>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default Movies;\n"],"names":["Form","styled","SearchForm","getQuery","value","useState","query","setQuery","onSubmit","e","preventDefault","currentTarget","elements","trim","alert","type","name","onChange","target","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","get","error","setError","location","useLocation","useEffect","fetchMoviesByQuery","movies","length","Error","getMoviesByQuery","params","message","map","id","title","to","state","from"],"sourceRoot":""}