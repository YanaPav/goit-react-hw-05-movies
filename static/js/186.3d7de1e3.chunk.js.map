{"version":3,"file":"static/js/186.3d7de1e3.chunk.js","mappings":"yNAkDA,UA9CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBR,IArBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaH,GAFpC,UAIwB,KAFdI,EAFV,QAIaC,OAJb,sBAKY,IAAIC,MAAM,sCALtB,OAOIT,EAAWO,GAPf,gDASIL,EAAS,EAAD,IATZ,0DADc,sBAgBd,OAhBe,WAAD,wBAcdQ,GAEO,WACLR,EAAS,KACV,CACF,GAAE,CAACC,IAECJ,EAEL,OACE,gCACGE,IAAS,uBAAIA,EAAMU,WAEpB,wBACGZ,EAAQa,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAKZ,QAIR,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await fetchReviews(movieId);\n\n        if (data.length === 0) {\n          throw new Error('Oooops there are no reviews yet =(');\n        }\n        setReviews(data);\n      } catch (e) {\n        setError(e);\n      }\n    }\n\n    getReviews();\n\n    return () => {\n      setError(null);\n    };\n  }, [movieId]);\n\n  if (!reviews) return;\n\n  return (\n    <>\n      {error && <p>{error.message}</p>}\n\n      <ul>\n        {reviews.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <b>Author: {author}</b>\n              <p>{content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchReviews","data","length","Error","getReviews","message","map","author","content","id"],"sourceRoot":""}